{
  "version": 3,
  "sources": ["../../../app/routes/cases.new.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/cases.new.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/cases.new.tsx\");\n  import.meta.hot.lastModified = \"1740871909257\";\n}\n// REMIX HMR END\n\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, useActionData } from \"@remix-run/react\";\nimport { Layout } from \"~/components/Layout\";\nimport { Button } from \"~/components/ui/Button\";\nimport { Card, CardContent, CardHeader } from \"~/components/ui/Card\";\nconst areas = [\"produccion\", \"calidad\", \"ventas\", \"despachos\", \"gerencia\", \"contabilidad\", \"marketing\", \"talento humano\", \"cliente\"];\nexport async function action({\n  request\n}) {\n  const formData = await request.formData();\n  const errors = {};\n\n  // Validaci\u00F3n b\u00E1sica\n  if (!formData.get(\"title\")) errors.title = \"El t\u00EDtulo es requerido\";\n  if (!formData.get(\"client\")) errors.client = \"El cliente es requerido\";\n  if (!formData.get(\"reportedBy\")) errors.reportedBy = \"El nombre es requerido\";\n  if (!formData.get(\"reporterEmail\")) errors.reporterEmail = \"El correo es requerido\";\n  if (!formData.get(\"description\")) errors.description = \"La descripci\u00F3n es requerida\";\n  if (!formData.get(\"type\")) errors.type = \"El tipo es requerido\";\n  if (Object.keys(errors).length > 0) {\n    return json({\n      errors\n    });\n  }\n\n  // Aqu\u00ED ir\u00EDa la l\u00F3gica para guardar el caso\n  return redirect(\"/cases\");\n}\nexport default function NewCase() {\n  _s();\n  const actionData = useActionData();\n  return <Layout>\n      <div className=\"max-w-3xl mx-auto space-y-4\">\n        <h1 className=\"text-2xl font-bold\">Registrar Nuevo Caso</h1>\n\n        <Card>\n          <CardHeader>Informaci\u00F3n del Caso</CardHeader>\n          <CardContent>\n            <Form method=\"post\" className=\"space-y-6\" encType=\"multipart/form-data\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div className=\"space-y-2\">\n                  <label className=\"block text-sm font-medium text-gray-700\">\n                    Fecha\n                  </label>\n                  <input type=\"date\" name=\"date\" className=\"w-full rounded-md border px-3 py-2\" defaultValue={new Date().toISOString().split('T')[0]} />\n                </div>\n\n                <div className=\"space-y-2\">\n                  <label className=\"block text-sm font-medium text-gray-700\">\n                    Tipo de Caso\n                  </label>\n                  <select name=\"type\" className=\"w-full rounded-md border px-3 py-2\">\n                    <option value=\"\">Seleccione un tipo</option>\n                    <option value=\"non_conformity\">No Conformidad</option>\n                    <option value=\"complaint\">Reclamo</option>\n                    <option value=\"improvement\">Mejora</option>\n                  </select>\n                  {actionData?.errors?.type && <p className=\"text-red-600 text-sm\">{actionData.errors.type}</p>}\n                </div>\n\n                <div className=\"space-y-2\">\n                  <label className=\"block text-sm font-medium text-gray-700\">\n                    Cliente\n                  </label>\n                  <input type=\"text\" name=\"client\" className=\"w-full rounded-md border px-3 py-2\" placeholder=\"Nombre del cliente\" />\n                  {actionData?.errors?.client && <p className=\"text-red-600 text-sm\">{actionData.errors.client}</p>}\n                </div>\n\n                <div className=\"space-y-2\">\n                  <label className=\"block text-sm font-medium text-gray-700\">\n                    Orden de Producci\u00F3n\n                  </label>\n                  <input type=\"text\" name=\"productionOrder\" className=\"w-full rounded-md border px-3 py-2\" placeholder=\"N\u00FAmero de orden\" />\n                </div>\n\n                <div className=\"space-y-2\">\n                  <label className=\"block text-sm font-medium text-gray-700\">\n                    C\u00F3digo de Producto\n                  </label>\n                  <input type=\"text\" name=\"productCode\" className=\"w-full rounded-md border px-3 py-2\" placeholder=\"C\u00F3digo del producto\" />\n                </div>\n\n                <div className=\"space-y-2\">\n                  <label className=\"block text-sm font-medium text-gray-700\">\n                    \u00C1rea\n                  </label>\n                  <select name=\"area\" className=\"w-full rounded-md border px-3 py-2\">\n                    <option value=\"\">Seleccione un \u00E1rea</option>\n                    {areas.map(area => <option key={area} value={area}>\n                        {area.charAt(0).toUpperCase() + area.slice(1)}\n                      </option>)}\n                  </select>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <label className=\"block text-sm font-medium text-gray-700\">\n                    Reportado por\n                  </label>\n                  <input type=\"text\" name=\"reportedBy\" className=\"w-full rounded-md border px-3 py-2\" placeholder=\"Nombre completo\" />\n                  {actionData?.errors?.reportedBy && <p className=\"text-red-600 text-sm\">{actionData.errors.reportedBy}</p>}\n                </div>\n\n                <div className=\"space-y-2\">\n                  <label className=\"block text-sm font-medium text-gray-700\">\n                    Correo electr\u00F3nico\n                  </label>\n                  <input type=\"email\" name=\"reporterEmail\" className=\"w-full rounded-md border px-3 py-2\" placeholder=\"correo@ejemplo.com\" />\n                  {actionData?.errors?.reporterEmail && <p className=\"text-red-600 text-sm\">{actionData.errors.reporterEmail}</p>}\n                </div>\n              </div>\n\n              <div className=\"space-y-2\">\n                <label className=\"block text-sm font-medium text-gray-700\">\n                  Descripci\u00F3n del caso\n                </label>\n                <textarea name=\"description\" rows={4} className=\"w-full rounded-md border px-3 py-2\" placeholder=\"Describe el caso o mejora...\" />\n                {actionData?.errors?.description && <p className=\"text-red-600 text-sm\">{actionData.errors.description}</p>}\n              </div>\n\n              <div className=\"space-y-2\">\n                <label className=\"block text-sm font-medium text-gray-700\">\n                  Evidencia fotogr\u00E1fica\n                </label>\n                <input type=\"file\" name=\"evidence\" accept=\"image/*\" multiple className=\"w-full\" />\n              </div>\n\n              <div className=\"flex justify-end gap-4\">\n                <Button type=\"button\" variant=\"secondary\" onClick={() => window.history.back()}>\n                  Cancelar\n                </Button>\n                <Button type=\"submit\">\n                  Crear Caso\n                </Button>\n              </div>\n            </Form>\n          </CardContent>\n        </Card>\n      </div>\n    </Layout>;\n}\n_s(NewCase, \"fHVw5pq0Zwd2gXh2gyrnVdHnLCc=\", false, function () {\n  return [useActionData];\n});\n_c = NewCase;\nvar _c;\n$RefreshReg$(_c, \"NewCase\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,kBAA+B;AAiCvB;AArDR,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,+BAAiC,EAAE;AAAA,EAC5E;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA0B;AAC1B,cAAY,IAAI,eAAe;AACjC;AAQA,IAAM,QAAQ,CAAC,cAAc,WAAW,UAAU,aAAa,YAAY,gBAAgB,aAAa,kBAAkB,SAAS;AAuBpH,SAAR,UAA2B;AAChC,KAAG;AACH,QAAM,aAAa,cAAc;AACjC,SAAO,mDAAC,UACJ,6DAAC,SAAI,WAAU,+BACb;AAAA,uDAAC,QAAG,WAAU,sBAAqB,oCAAnC;AAAA;AAAA;AAAA;AAAA,WAAuD;AAAA,IAEvD,mDAAC,QACC;AAAA,yDAAC,cAAW,uCAAZ;AAAA;AAAA;AAAA;AAAA,aAAgC;AAAA,MAChC,mDAAC,eACC,6DAAC,QAAK,QAAO,QAAO,WAAU,aAAY,SAAQ,uBAChD;AAAA,2DAAC,SAAI,WAAU,0BACb;AAAA,6DAAC,SAAI,WAAU,aACb;AAAA,+DAAC,WAAM,WAAU,2CAA0C,qBAA3D;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,YACA,mDAAC,WAAM,MAAK,QAAO,MAAK,QAAO,WAAU,sCAAqC,eAAc,oBAAI,KAAK,GAAE,YAAY,EAAE,MAAM,GAAG,EAAE,CAAC,KAAjI;AAAA;AAAA;AAAA;AAAA,mBAAoI;AAAA,eAJtI;AAAA;AAAA;AAAA;AAAA,iBAKA;AAAA,UAEA,mDAAC,SAAI,WAAU,aACb;AAAA,+DAAC,WAAM,WAAU,2CAA0C,4BAA3D;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,YACA,mDAAC,YAAO,MAAK,QAAO,WAAU,sCAC5B;AAAA,iEAAC,YAAO,OAAM,IAAG,kCAAjB;AAAA;AAAA;AAAA;AAAA,qBAAmC;AAAA,cACnC,mDAAC,YAAO,OAAM,kBAAiB,8BAA/B;AAAA;AAAA;AAAA;AAAA,qBAA6C;AAAA,cAC7C,mDAAC,YAAO,OAAM,aAAY,uBAA1B;AAAA;AAAA;AAAA;AAAA,qBAAiC;AAAA,cACjC,mDAAC,YAAO,OAAM,eAAc,sBAA5B;AAAA;AAAA;AAAA;AAAA,qBAAkC;AAAA,iBAJpC;AAAA;AAAA;AAAA;AAAA,mBAKA;AAAA,YACC,YAAY,QAAQ,QAAQ,mDAAC,OAAE,WAAU,wBAAwB,qBAAW,OAAO,QAAvD;AAAA;AAAA;AAAA;AAAA,mBAA4D;AAAA,eAV3F;AAAA;AAAA;AAAA;AAAA,iBAWA;AAAA,UAEA,mDAAC,SAAI,WAAU,aACb;AAAA,+DAAC,WAAM,WAAU,2CAA0C,uBAA3D;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,YACA,mDAAC,WAAM,MAAK,QAAO,MAAK,UAAS,WAAU,sCAAqC,aAAY,wBAA5F;AAAA;AAAA;AAAA;AAAA,mBAAiH;AAAA,YAChH,YAAY,QAAQ,UAAU,mDAAC,OAAE,WAAU,wBAAwB,qBAAW,OAAO,UAAvD;AAAA;AAAA;AAAA;AAAA,mBAA8D;AAAA,eAL/F;AAAA;AAAA;AAAA;AAAA,iBAMA;AAAA,UAEA,mDAAC,SAAI,WAAU,aACb;AAAA,+DAAC,WAAM,WAAU,2CAA0C,sCAA3D;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,YACA,mDAAC,WAAM,MAAK,QAAO,MAAK,mBAAkB,WAAU,sCAAqC,aAAY,wBAArG;AAAA;AAAA;AAAA;AAAA,mBAAuH;AAAA,eAJzH;AAAA;AAAA;AAAA;AAAA,iBAKA;AAAA,UAEA,mDAAC,SAAI,WAAU,aACb;AAAA,+DAAC,WAAM,WAAU,2CAA0C,qCAA3D;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,YACA,mDAAC,WAAM,MAAK,QAAO,MAAK,eAAc,WAAU,sCAAqC,aAAY,4BAAjG;AAAA;AAAA;AAAA;AAAA,mBAAuH;AAAA,eAJzH;AAAA;AAAA;AAAA;AAAA,iBAKA;AAAA,UAEA,mDAAC,SAAI,WAAU,aACb;AAAA,+DAAC,WAAM,WAAU,2CAA0C,uBAA3D;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,YACA,mDAAC,YAAO,MAAK,QAAO,WAAU,sCAC5B;AAAA,iEAAC,YAAO,OAAM,IAAG,qCAAjB;AAAA;AAAA;AAAA;AAAA,qBAAmC;AAAA,cAClC,MAAM,IAAI,UAAQ,mDAAC,YAAkB,OAAO,MACxC,eAAK,OAAO,CAAC,EAAE,YAAY,IAAI,KAAK,MAAM,CAAC,KADhB,MAAb;AAAA;AAAA;AAAA;AAAA,qBAEjB,CAAS;AAAA,iBAJb;AAAA;AAAA;AAAA;AAAA,mBAKA;AAAA,eATF;AAAA;AAAA;AAAA;AAAA,iBAUA;AAAA,UAEA,mDAAC,SAAI,WAAU,aACb;AAAA,+DAAC,WAAM,WAAU,2CAA0C,6BAA3D;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,YACA,mDAAC,WAAM,MAAK,QAAO,MAAK,cAAa,WAAU,sCAAqC,aAAY,qBAAhG;AAAA;AAAA;AAAA;AAAA,mBAAkH;AAAA,YACjH,YAAY,QAAQ,cAAc,mDAAC,OAAE,WAAU,wBAAwB,qBAAW,OAAO,cAAvD;AAAA;AAAA;AAAA;AAAA,mBAAkE;AAAA,eALvG;AAAA;AAAA;AAAA;AAAA,iBAMA;AAAA,UAEA,mDAAC,SAAI,WAAU,aACb;AAAA,+DAAC,WAAM,WAAU,2CAA0C,qCAA3D;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,YACA,mDAAC,WAAM,MAAK,SAAQ,MAAK,iBAAgB,WAAU,sCAAqC,aAAY,wBAApG;AAAA;AAAA;AAAA;AAAA,mBAAyH;AAAA,YACxH,YAAY,QAAQ,iBAAiB,mDAAC,OAAE,WAAU,wBAAwB,qBAAW,OAAO,iBAAvD;AAAA;AAAA;AAAA;AAAA,mBAAqE;AAAA,eAL7G;AAAA;AAAA;AAAA;AAAA,iBAMA;AAAA,aArEF;AAAA;AAAA;AAAA;AAAA,eAsEA;AAAA,QAEA,mDAAC,SAAI,WAAU,aACb;AAAA,6DAAC,WAAM,WAAU,2CAA0C,uCAA3D;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA,mDAAC,cAAS,MAAK,eAAc,MAAM,GAAG,WAAU,sCAAqC,aAAY,kCAAjG;AAAA;AAAA;AAAA;AAAA,iBAAgI;AAAA,UAC/H,YAAY,QAAQ,eAAe,mDAAC,OAAE,WAAU,wBAAwB,qBAAW,OAAO,eAAvD;AAAA;AAAA;AAAA;AAAA,iBAAmE;AAAA,aALzG;AAAA;AAAA;AAAA;AAAA,eAMA;AAAA,QAEA,mDAAC,SAAI,WAAU,aACb;AAAA,6DAAC,WAAM,WAAU,2CAA0C,wCAA3D;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA,mDAAC,WAAM,MAAK,QAAO,MAAK,YAAW,QAAO,WAAU,UAAQ,MAAC,WAAU,YAAvE;AAAA;AAAA;AAAA;AAAA,iBAAgF;AAAA,aAJlF;AAAA;AAAA;AAAA;AAAA,eAKA;AAAA,QAEA,mDAAC,SAAI,WAAU,0BACb;AAAA,6DAAC,UAAO,MAAK,UAAS,SAAQ,aAAY,SAAS,MAAM,OAAO,QAAQ,KAAK,GAAG,wBAAhF;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA,mDAAC,UAAO,MAAK,UAAS,0BAAtB;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,aANF;AAAA;AAAA;AAAA;AAAA,eAOA;AAAA,WA/FF;AAAA;AAAA;AAAA;AAAA,aAgGA,KAjGF;AAAA;AAAA;AAAA;AAAA,aAkGA;AAAA,SApGF;AAAA;AAAA;AAAA;AAAA,WAqGA;AAAA,OAxGF;AAAA;AAAA;AAAA;AAAA,SAyGA,KA1GG;AAAA;AAAA;AAAA;AAAA,SA2GL;AACJ;AACA,GAAG,SAAS,gCAAgC,OAAO,WAAY;AAC7D,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,SAAS;AAE1B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
